# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
   #entities 
   user_entity: ApiBundle\Entity\User
   user_repository: ApiBundle\Entity\UserRepository
   
   apiKey_entity: AccessBundle\Entity\ApiKey
   apiKey_repository: AccessBundle\Entity\ApiKeyRepository

   #forms 
   sf_base_form: Symfony\Component\Form\Form
   user_form: ApiBundle\Form\UserType
services:
    # entity services
    users_handler:
        class: %user_repository%
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - %user_entity%
            
    apiKey_handler:
        class: %apiKey_repository%
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - %apiKey_entity%

    apikey_authenticator:
        class:  AccessBundle\Security\ApiKeyAuthenticator
        public: false

    api_key_user_provider:
        class: AccessBundle\Security\ApiKeyUserProvider
        arguments: ["@users_handler", "@apiKey_handler"]

    #forms services:
    api.form.user:
        factory_method: createNamed
        factory_service: form.factory
        class: %sf_base_form%
        arguments:
            - apibundle_user                   # name of the form
            - @api.form.type.user              # alias of the form type
            - null                             # data to bind, this is where your entity could go if you have that defined as a service
            - { validation_groups: [Default] } # validation groups
 
    api.form.type.user:
        class: %user_form%
        tags:
        - { name: apibundle_user, alias: user }



#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
